# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure("2") do |config|
  # config.vm.box = "precise32"
  config.vm.box = "precise64"
 
  config.vm.network :forwarded_port, guest: 80, host: 8080

  config.vm.provision :shell, :inline => "gem install chef --version 11.0.0 --no-rdoc --no-ri --conservative"
  config.vm.provision :shell, :inline => "apt-get install -y curl vim"

  # installs all dependencies and drush
  config.vm.provision :chef_solo do |chef|
    chef.cookbooks_path = ["site-cookbooks", "cookbooks"]
    chef.add_recipe 'deploy_drupal::lamp_stack'
    chef.add_recipe 'deploy_drupal::pear_dependencies'

    chef.json.merge!({ 
      :mysql => {
        :server_root_password => "root", 
        :server_debian_password => "root",
        :server_repl_password => "root"
      }
    })
  end 
  # next ## SNAPSHOT: CLEAN
  
  # Creates a drupal codebase and SQL dump in /tmp/quick-drupal/site/index.php and /tmp/quick-drupal/drupal.sq.gz 
  config.vm.provision :shell, :inline => <<-EOH
    # this test is analogous to :creates condition in chef resource
    test -f "/tmp/quick-drupal/drupal.sql.gz" && test -f "/tmp/quick-drupal/site/index.php" && exit 0
    php -d "sendmail_path=/bin/true" /usr/share/php/drush/drush.php qd -y \
      --db-url="mysql://root:root@localhost/drupal_temp_db" \
      --no-server --site-name="drupal-from-sql-dump" \
      --root="/tmp/quick-drupal/site"
    cd "/tmp/quick-drupal/site"
    drush sql-dump --gzip --result-file='/tmp/quick-drupal/drupal.sql'
  EOH

  # Installs the previously exported site code and SQL dump via deploy_drupal::default
  config.vm.provision :chef_solo do |chef|
    chef.cookbooks_path = ["site-cookbooks", "cookbooks"]
    chef.add_recipe 'deploy_drupal::default'
   
    chef.json.merge!({
      :deploy_drupal => { 
        :sql_load_file => '/tmp/quick-drupal/drupal.sql.gz',
        :site_name => 'pre-existing-drupal',
        :codebase_source_path =>  "/tmp/quick-drupal/site",
        :apache_port => '80'
      },
      :mysql => {
        :server_root_password => "root",
        :server_debian_password => "root",
        :server_repl_password => "root"
      }
    })
  end
  # next ## SNAPSHOT:DONE
  
  # Test that site and SQL dump were installed correctly and are being served by Apache
  config.vm.provision :shell, :inline => "curl --silent localhost:80 | grep '<title>' | grep 'drupal-from-sql-dump'"
  
end
